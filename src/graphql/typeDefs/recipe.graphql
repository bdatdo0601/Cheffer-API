#import * from "./ingredient.graphql"
#import * from "./foodFilterParameter.graphql"
#import * from "./util.graphql"

"""
A Type of a recipe (i.e: Breakfast, Dinner, Lunch, etc)
"""
type RecipeType {
    "ID of the recipe type. Generated by database"
    recipeTypeID: ID!
    "Name of the recipe type"
    name: String!
}

"""
An ingredient item in a recipe list.
associate with the name and its amount

TODO: should definitely add in substititute, etc
"""
type IngredientItem {
    "Ingredient information"
    ingredient: Ingredient!
    "Amount of that ingredient needed"
    amount: Float!
}

"""
Each step of the recipe's instruction
"""
type RecipeStep {
    "Quick description for the step"
    summary: String!
    "Full description for the step"
    detailDescription: String
}
"""
An user made comment
"""
type Comment {
    "ID of the comment. Generated by database"
    commentID: ID!
    "User that made comment"
    user: User!
    "Detail of this comment"
    comment: String!
    "Replies to this comment"
    reply: [Comment]!
    "Time that this comment was created"
    timeCreated: Date!
}

"""
A Recipe of a dish (i.e: chicken burito)
"""
type Recipe {
    "ID of the recipe. Generated by recipe"
    recipeID: ID!
    "Name of the recipe"
    name: String!
    "Associated word for the recipe"
    synonyms: [String]!
    "Type of the recipe"
    type: [RecipeType]!
    "Filters that apply to the recipe"
    specialitiesFilter: [FoodFilterParameter]!
    "Ingredients needed to make the recipe"
    ingredients: [IngredientItem]!
    "Recipe's instructions"
    steps: [RecipeStep]!
    "Other recipes that would go well/similar to this recipe"
    associatedRecipes: [Recipe]!
    "Comments made to this recipe"
    comments: [Comment]!
    "Time when this recipe was created"
    timeCreated: Date!
}
